--- a/drivers/pinctrl/sunplus/sppctl_pinctrl.c	2022-08-04 18:02:25.698021775 +0300
+++ a/drivers/pinctrl/sunplus/sppctl_pinctrl.c	2022-08-04 19:15:21.373980045 +0300
@@ -247,22 +247,7 @@
 
 void stpctl_m_gpio_fre(struct pinctrl_dev *_pd, struct pinctrl_gpio_range *range, unsigned _pin)
 {
-#ifdef SUPPORT_PINMUX
-	sppctl_pdata_t *pctrl = pinctrl_dev_get_drvdata(_pd);
-#endif
-	sppctlgpio_chip_t *pc = ( sppctlgpio_chip_t *)gpiochip_get_data( range->gc);
-	int i;
-	KDBG(_pd->dev, "%s(%d)\n", __FUNCTION__, _pin);
-	// if irq is binded - free it
-	for ( i = 0; i < SPPCTL_GPIO_IRQS; i++) {
-	  if ( pc->irq[ i] < 0) continue;
-	  if ( pc->irq_pin[ i] != _pin) continue;
-	  KDBG(_pd->dev, "%s(%03d) detouching from irq: %d\n", __FUNCTION__, _pin, pc->irq[ i]);
-#ifdef SUPPORT_PINMUX
-	  sppctl_pin_set( pctrl, 0, MUXF_GPIO_INT0 + i - 2);
-#endif
-	  pc->irq_pin[ i] = -1;
-       }
+	sppctlgpio_unmux_irq( range->gc, _pin);
 }
 int stpctl_m_gpio_sdir(struct pinctrl_dev *_pd, struct pinctrl_gpio_range *range, unsigned _pin, bool _in)
 {
