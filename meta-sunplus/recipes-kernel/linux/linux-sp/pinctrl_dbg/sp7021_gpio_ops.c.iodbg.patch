--- a/drivers/pinctrl/sppctl/sp7021_gpio_ops.c	2019-10-08 21:24:53.174144541 +0300
+++ a/drivers/pinctrl/sppctl/sp7021_gpio_ops.c	2019-10-08 21:47:05.127522416 +0300
@@ -170,6 +170,7 @@
  sp7021gpio_chip_t *pc = ( sp7021gpio_chip_t *)gpiochip_get_data( _c);
  r = (BIT(R16_BOF(_n))<<16);
  writel( r, pc->base0 + SP7021_GPIO_OFF_OE + R16_ROF(_n));
+if ( _n == 2 || _n ==1) KINF( _c->parent, "%s(%d)\n", __FUNCTION__, _n);
  return( 0);  }
 
 // set to output: 0:ok: OE=1,O=_v
@@ -181,6 +182,7 @@
  if ( _v < 0) return( 0);
  r = (BIT(R16_BOF(_n))<<16) | ( ( _v & BIT(0)) << R16_BOF(_n));
  writel( r, pc->base0 + SP7021_GPIO_OFF_OUT + R16_ROF(_n));
+if ( _n == 2 || _n ==1) KINF( _c->parent, "%s(%d,%d)\n", __FUNCTION__, _n, _v);
  return( 0);  }
 
 // get value for signal: 0=low | 1=high | -err
@@ -188,14 +190,8 @@
  u32 r;
  sp7021gpio_chip_t *pc = ( sp7021gpio_chip_t *)gpiochip_get_data( _c);
  r = readl( pc->base0 + SP7021_GPIO_OFF_IN + R32_ROF(_n));
- return( R32_VAL(r,R32_BOF(_n)));
- //
- if ( sp7021gpio_f_gdi( _c, _n) == 1) {
-   r = readl( pc->base0 + SP7021_GPIO_OFF_IN + R32_ROF(_n));
-   return( R32_VAL(r,R32_BOF(_n)));  }
- // OUT
- r = readl( pc->base0 + SP7021_GPIO_OFF_OUT + R16_ROF(_n));
- return( R32_VAL(r,R16_BOF(_n)));  }
+//if ( _n == 2 || _n ==1) KINF( _c->parent, "%s(%d) r:%d\n", __FUNCTION__, _n, R32_VAL(r,R32_BOF(_n)));
+ return( R32_VAL(r,R32_BOF(_n)));  }
 
 // OUT only: can't call set on IN pin: protected by gpio_chip layer
 void sp7021gpio_f_set( struct gpio_chip *_c, unsigned int _n, int _v) {
@@ -203,6 +199,7 @@
  sp7021gpio_chip_t *pc = ( sp7021gpio_chip_t *)gpiochip_get_data( _c);
  r = (BIT(R16_BOF(_n))<<16) | ( _v & 0x0001) << R16_BOF(_n);
  writel( r, pc->base0 + SP7021_GPIO_OFF_OUT + R16_ROF(_n));
+//if ( _n == 2 || _n ==1) KINF( _c->parent, "%s(%d,%d)\n", __FUNCTION__, _n, _v);
  return;  }
 
  // FIX: test in-depth
